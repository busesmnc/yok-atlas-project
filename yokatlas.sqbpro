<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="yokatlas.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1983"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="academicians" custom_title="0" dock_id="5" table="4,12:mainacademicians"/><dock_state state="000000ff00000000fd00000001000000020000045f0000033bfc0100000005fb000000160064006f0063006b00420072006f00770073006500310100000000000004360000000000000000fb000000160064006f0063006b00420072006f007700730065003201000000000000045f0000000000000000fb000000160064006f0063006b00420072006f007700730065003301000000000000045f0000000000000000fb000000160064006f0063006b00420072006f007700730065003401000000000000045f0000000000000000fb000000160064006f0063006b00420072006f007700730065003501000000000000045f0000011400ffffff000002df0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Cities" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="24"/><column index="2" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="academicians" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="30"/><column index="2" value="105"/><column index="3" value="37"/><column index="4" value="69"/><column index="5" value="81"/><column index="6" value="33"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">select faculties.id as faculty_id , faculties.faculty_name as faculty_name , departments.id as department_id, departments.department_name, 
departments.d_type as department_type,total_student_number.year as year, genders.male, genders.female, total_student_number.male as total_male_number, 
total_student_number.female as total_female_number, total_student_number.total_number as total_sdt_number from departments
LEFT JOIN genders on departments.id = genders.department_id
LEFT JOIN faculties on departments.faculty_id = faculties.id
LEFT JOIN total_student_number on departments.id = total_student_number.department_id
GROUP by departments.department_name, genders.year;

select sum(male) as num_male,  sum(female) as num_female from genders;
select sum(total_number) from total_student_number;
select * from total_student_number
select * from genders

select faculties.id as faculty_id , faculties.faculty_name as faculty_name , departments.id as department_id, departments.department_name, 
departments.d_type as department_type, total_student_number.male, total_student_number.female, total_student_number.total_number from departments
left join total_student_number on departments.id = total_student_number.department_id
LEFT JOIN faculties on departments.faculty_id = faculties.id
GROUP by department_name, total_student_number.year;

SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    genders.male, 
    genders.female, 
    total_student_number.male AS total_male_number, 
    total_student_number.female AS total_female_number, 
    total_student_number.total_number AS total_sdt_number,
    academicians.proffesor, 
    academicians.assoc_prof, 
    academicians.phd, 
    base_points.point, 
    correct_answers_for_dil.tyt_fen, 
    correct_answers_for_dil.tyt_sosyal, 
    correct_answers_for_dil.tyt_matematik, 
    correct_answers_for_dil.tyt_turkce, 
    correct_answers_for_dil.ydt_yabanci_dil, 
    correct_answers_for_say.ayt_biyoloji, 
    correct_answers_for_say.ayt_fizik, 
    correct_answers_for_say.ayt_kimya, 
    correct_answers_for_say.ayt_matematik, 
    correct_answers_for_ea.ayt_cografya1, 
    correct_answers_for_ea.ayt_matematik AS ayt_ea_matematik, 
    correct_answers_for_ea.ayt_tarih1 AS ayt_ea_tarih1, 
    correct_answers_for_ea.ayt_edebiyat AS ayt_ea_edebiyat, 
    correct_answers_for_soz.ayt_cografya2, 
    correct_answers_for_soz.ayt_din, 
    correct_answers_for_soz.ayt_felsefe, 
    correct_answers_for_soz.ayt_tarih2, 
    exchange_program.leaving, 
    exchange_program.incoming, 
    success_orders.success_order, 
    general_infos.quota, 
    general_infos.prefered 
FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id
LEFT JOIN academicians ON departments.id = academicians.department_id AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id AND total_student_number.year = base_points.year
LEFT JOIN correct_answers_for_dil ON departments.id = correct_answers_for_dil.department_id AND total_student_number.year = correct_answers_for_dil.year
LEFT JOIN correct_answers_for_say ON departments.id = correct_answers_for_say.department_id AND total_student_number.year = correct_answers_for_say.year
LEFT JOIN correct_answers_for_ea ON departments.id = correct_answers_for_ea.department_id AND total_student_number.year = correct_answers_for_ea.year
LEFT JOIN correct_answers_for_soz ON departments.id = correct_answers_for_soz.department_id AND total_student_number.year = correct_answers_for_soz.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id AND total_student_number.year = general_infos.year
GROUP BY 
    departments.department_name, 
    total_student_number.year, 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    genders.male, 
    genders.female, 
    total_student_number.male, 
    total_student_number.female, 
    total_student_number.total_number, 
    academicians.proffesor, 
    academicians.assoc_prof, 
    academicians.phd, 
    base_points.point, 
    correct_answers_for_dil.tyt_fen, 
    correct_answers_for_dil.tyt_sosyal, 
    correct_answers_for_dil.tyt_matematik, 
    correct_answers_for_dil.tyt_turkce, 
    correct_answers_for_dil.ydt_yabanci_dil, 
    correct_answers_for_say.ayt_biyoloji, 
    correct_answers_for_say.ayt_fizik, 
    correct_answers_for_say.ayt_kimya, 
    correct_answers_for_say.ayt_matematik, 
    correct_answers_for_ea.ayt_cografya1, 
    correct_answers_for_ea.ayt_matematik, 
    correct_answers_for_ea.ayt_tarih1, 
    correct_answers_for_ea.ayt_edebiyat, 
    correct_answers_for_soz.ayt_cografya2, 
    correct_answers_for_soz.ayt_din, 
    correct_answers_for_soz.ayt_felsefe, 
    correct_answers_for_soz.ayt_tarih2, 
    exchange_program.leaving, 
    exchange_program.incoming, 
    success_orders.success_order, 
    general_infos.quota, 
    general_infos.prefered;
	
	SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS total_male, 
    SUM(genders.female) AS total_female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 
    AVG(correct_answers_for_dil.tyt_fen) AS avg_tyt_fen, 
    AVG(correct_answers_for_dil.tyt_sosyal) AS avg_tyt_sosyal, 
    AVG(correct_answers_for_dil.tyt_matematik) AS avg_tyt_matematik, 
    AVG(correct_answers_for_dil.tyt_turkce) AS avg_tyt_turkce, 
    AVG(correct_answers_for_dil.ydt_yabanci_dil) AS avg_ydt_yabanci_dil, 
    AVG(correct_answers_for_say.ayt_biyoloji) AS avg_ayt_biyoloji, 
    AVG(correct_answers_for_say.ayt_fizik) AS avg_ayt_fizik, 
    AVG(correct_answers_for_say.ayt_kimya) AS avg_ayt_kimya, 
    AVG(correct_answers_for_say.ayt_matematik) AS avg_ayt_matematik, 
    AVG(correct_answers_for_ea.ayt_cografya1) AS avg_ayt_cografya1, 
    AVG(correct_answers_for_ea.ayt_matematik) AS avg_ayt_ea_matematik, 
    AVG(correct_answers_for_ea.ayt_tarih1) AS avg_ayt_ea_tarih1, 
    AVG(correct_answers_for_ea.ayt_edebiyat) AS avg_ayt_ea_edebiyat, 
    AVG(correct_answers_for_soz.ayt_cografya2) AS avg_ayt_cografya2, 
    AVG(correct_answers_for_soz.ayt_din) AS avg_ayt_din, 
    AVG(correct_answers_for_soz.ayt_felsefe) AS avg_ayt_felsefe, 
    AVG(correct_answers_for_soz.ayt_tarih2) AS avg_ayt_tarih2, 
    SUM(exchange_program.leaving) AS total_leaving, 
    SUM(exchange_program.incoming) AS total_incoming, 
    AVG(success_orders.success_order) AS avg_success_order, 
    SUM(general_infos.quota) AS total_quota, 
    SUM(general_infos.prefered) AS total_preferred
FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id
LEFT JOIN academicians ON departments.id = academicians.department_id AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id AND total_student_number.year = base_points.year
LEFT JOIN correct_answers_for_dil ON departments.id = correct_answers_for_dil.department_id AND total_student_number.year = correct_answers_for_dil.year
LEFT JOIN correct_answers_for_say ON departments.id = correct_answers_for_say.department_id AND total_student_number.year = correct_answers_for_say.year
LEFT JOIN correct_answers_for_ea ON departments.id = correct_answers_for_ea.department_id AND total_student_number.year = correct_answers_for_ea.year
LEFT JOIN correct_answers_for_soz ON departments.id = correct_answers_for_soz.department_id AND total_student_number.year = correct_answers_for_soz.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id AND total_student_number.year = general_infos.year
GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;

select* from correct_answers_for_say


SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS total_male, 
    SUM(genders.female) AS total_female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 
    
    -- TYT Soru Cevapları
    AVG(CASE 
        WHEN departments.d_type = 'DIL' THEN correct_answers_for_dil.tyt_matematik
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.tyt_matematik
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.tyt_matematik
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.tyt_matematik
    END) AS avg_tyt_matematik,
    
    -- EA AYT Soruları
    AVG(correct_answers_for_ea.ayt_matematik) AS avg_ayt_ea_matematik,
    AVG(correct_answers_for_ea.ayt_edebiyat) AS avg_ayt_ea_edebiyat,
    
    -- SAY AYT Soruları
    AVG(correct_answers_for_say.ayt_biyoloji) AS avg_ayt_biyoloji,
    AVG(correct_answers_for_say.ayt_fizik) AS avg_ayt_fizik,
    AVG(correct_answers_for_say.ayt_kimya) AS avg_ayt_kimya,
    AVG(correct_answers_for_say.ayt_matematik) AS avg_ayt_say_matematik,
    
    -- SOZ AYT Soruları
    AVG(correct_answers_for_soz.ayt_tarih1) AS avg_ayt_tarih1,
    AVG(correct_answers_for_soz.ayt_tarih2) AS avg_ayt_tarih2,
    AVG(correct_answers_for_soz.ayt_felsefe) AS avg_ayt_felsefe,
    AVG(correct_answers_for_soz.ayt_cografya2) AS avg_ayt_soz_cografya2,

    -- Exchange Program ve Success Order
    SUM(exchange_program.leaving) AS total_leaving, 
    SUM(exchange_program.incoming) AS total_incoming, 
    AVG(success_orders.success_order) AS avg_success_order, 

    -- General Info
    SUM(general_infos.quota) AS total_quota, 
    SUM(general_infos.prefered) AS total_preferred

FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id AND total_student_number.year = base_points.year

-- Tür Bazlı Correct Answers
LEFT JOIN correct_answers_for_dil ON departments.id = correct_answers_for_dil.department_id AND total_student_number.year = correct_answers_for_dil.year AND departments.d_type = 'DIL'
LEFT JOIN correct_answers_for_ea ON departments.id = correct_answers_for_ea.department_id AND total_student_number.year = correct_answers_for_ea.year AND departments.d_type = 'EA'
LEFT JOIN correct_answers_for_say ON departments.id = correct_answers_for_say.department_id AND total_student_number.year = correct_answers_for_say.year AND departments.d_type = 'SAY'
LEFT JOIN correct_answers_for_soz ON departments.id = correct_answers_for_soz.department_id AND total_student_number.year = correct_answers_for_soz.year AND departments.d_type = 'SOZ'

LEFT JOIN exchange_program ON departments.id = exchange_program.department_id AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id AND total_student_number.year = general_infos.year

GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;
	
	SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS total_male, 
    SUM(genders.female) AS total_female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 

    -- TYT Ortak Dersler
    AVG(CASE 
        WHEN departments.d_type IN ('DIL', 'SAY', 'EA', 'SOZ') THEN correct_answers_for_dil.tyt_turkce
    END) AS avg_tyt_turkce,
    AVG(CASE 
        WHEN departments.d_type IN ('DIL', 'SAY', 'EA', 'SOZ') THEN correct_answers_for_dil.tyt_fen
    END) AS avg_tyt_fen,
    AVG(CASE 
        WHEN departments.d_type IN ('DIL', 'SAY', 'EA', 'SOZ') THEN correct_answers_for_dil.tyt_sosyal
    END) AS avg_tyt_sosyal,
    AVG(CASE 
        WHEN departments.d_type IN ('DIL', 'SAY', 'EA', 'SOZ') THEN correct_answers_for_dil.tyt_matematik
    END) AS avg_tyt_matematik,
    
    -- AYT Ortak Dersler
    AVG(CASE 
        WHEN departments.d_type IN ('SAY', 'EA', 'SOZ') THEN correct_answers_for_ea.ayt_matematik
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.ayt_matematik
    END) AS avg_ayt_matematik,

    -- EA AYT Soruları
    AVG(correct_answers_for_ea.ayt_edebiyat) AS avg_ayt_ea_edebiyat,
    
    -- SAY AYT Soruları
    AVG(correct_answers_for_say.ayt_biyoloji) AS avg_ayt_biyoloji,
    AVG(correct_answers_for_say.ayt_fizik) AS avg_ayt_fizik,
    AVG(correct_answers_for_say.ayt_kimya) AS avg_ayt_kimya,

    -- SOZ AYT Soruları
    AVG(correct_answers_for_soz.ayt_tarih1) AS avg_ayt_tarih1,
    AVG(correct_answers_for_soz.ayt_tarih2) AS avg_ayt_tarih2,
    AVG(correct_answers_for_soz.ayt_felsefe) AS avg_ayt_felsefe,
    AVG(correct_answers_for_soz.ayt_cografya2) AS avg_ayt_soz_cografya2,

    -- Exchange Program ve Success Order
    SUM(exchange_program.leaving) AS total_leaving, 
    SUM(exchange_program.incoming) AS total_incoming, 
    AVG(success_orders.success_order) AS avg_success_order, 

    -- General Info
    SUM(general_infos.quota) AS total_quota, 
    SUM(general_infos.prefered) AS total_preferred

-----
SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS total_male, 
    SUM(genders.female) AS total_female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 

    -- TYT Dersleri
    AVG(CASE 
        WHEN departments.d_type = 'DIL' THEN correct_answers_for_dil.tyt_turkce
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.tyt_turkce
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.tyt_turkce
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.tyt_turkce
    END) AS avg_tyt_turkce,
    AVG(CASE 
        WHEN departments.d_type = 'DIL' THEN correct_answers_for_dil.tyt_fen
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.tyt_fen
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.tyt_fen
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.tyt_fen
    END) AS avg_tyt_fen,
    AVG(CASE 
        WHEN departments.d_type = 'DIL' THEN correct_answers_for_dil.tyt_sosyal
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.tyt_sosyal
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.tyt_sosyal
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.tyt_sosyal
    END) AS avg_tyt_sosyal,
    AVG(CASE 
        WHEN departments.d_type = 'DIL' THEN correct_answers_for_dil.tyt_matematik
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.tyt_matematik
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.tyt_matematik
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.tyt_matematik
    END) AS avg_tyt_matematik,

    -- AYT Matematik
    AVG(CASE 
        WHEN departments.d_type = 'EA' THEN correct_answers_for_ea.ayt_matematik
        WHEN departments.d_type = 'SAY' THEN correct_answers_for_say.ayt_matematik
        WHEN departments.d_type = 'SOZ' THEN correct_answers_for_soz.ayt_matematik
    END) AS avg_ayt_matematik,
	
    -- EA AYT Soruları
    AVG(correct_answers_for_ea.ayt_edebiyat) AS avg_ayt_ea_edebiyat,
    
    -- SAY AYT Soruları
    AVG(correct_answers_for_say.ayt_biyoloji) AS avg_ayt_biyoloji,
    AVG(correct_answers_for_say.ayt_fizik) AS avg_ayt_fizik,
    AVG(correct_answers_for_say.ayt_kimya) AS avg_ayt_kimya,

    -- SOZ AYT Soruları
    AVG(correct_answers_for_soz.ayt_tarih1) AS avg_ayt_tarih1,
    AVG(correct_answers_for_soz.ayt_tarih2) AS avg_ayt_tarih2,
    AVG(correct_answers_for_soz.ayt_felsefe) AS avg_ayt_felsefe,
    AVG(correct_answers_for_soz.ayt_cografya2) AS avg_ayt_soz_cografya2,

    -- Exchange Program ve Success Order
    SUM(exchange_program.leaving) AS total_leaving, 
    SUM(exchange_program.incoming) AS total_incoming, 
    AVG(success_orders.success_order) AS avg_success_order, 

    -- General Info
    SUM(general_infos.quota) AS total_quota, 
    SUM(general_infos.prefered) AS total_preferred

FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id AND total_student_number.year = base_points.year

-- Correct Answers Tabloları
LEFT JOIN correct_answers_for_dil ON departments.id = correct_answers_for_dil.department_id AND total_student_number.year = correct_answers_for_dil.year
LEFT JOIN correct_answers_for_ea ON departments.id = correct_answers_for_ea.department_id AND total_student_number.year = correct_answers_for_ea.year
LEFT JOIN correct_answers_for_say ON departments.id = correct_answers_for_say.department_id AND total_student_number.year = correct_answers_for_say.year
LEFT JOIN correct_answers_for_soz ON departments.id = correct_answers_for_soz.department_id AND total_student_number.year = correct_answers_for_soz.year

GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;
-------
SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS male, 
    SUM(genders.female) AS female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 

    -- Exchange Program ve Success Order
    SUM(exchange_program.leaving) AS total_leaving, 
    SUM(exchange_program.incoming) AS total_incoming, 
    AVG(success_orders.success_order) AS avg_success_order, 

    -- General Info
    SUM(general_infos.quota) AS total_quota, 
    SUM(general_infos.prefered) AS total_preferred

FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id 
    AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id 
    AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id 
    AND total_student_number.year = base_points.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id 
    AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id 
    AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id 
    AND total_student_number.year = general_infos.year

GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;


select * from academicians
where proffesor = 0
</sql><sql name="SQL 2">Select  faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS male, 
    SUM(genders.female) AS female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 
	
	Combined_Correct_Answers.tyt_turkce,
	Combined_Correct_Answers.tyt_matematik,
	Combined_Correct_Answers.tyt_fen,
	Combined_Correct_Answers.tyt_sosyal,
	Combined_Correct_Answers.ayt_matematik,
	Combined_Correct_Answers.ayt_fizik,
	Combined_Correct_Answers.ayt_kimya,
	Combined_Correct_Answers.ayt_biyoloji,
	Combined_Correct_Answers.ayt_edebiyat,
	Combined_Correct_Answers.ayt_cografya1,
	Combined_Correct_Answers.ayt_cografya2,
	Combined_Correct_Answers.ayt_din,
	Combined_Correct_Answers.ayt_felsefe,
	Combined_Correct_Answers.ayt_tarih1,
	Combined_Correct_Answers.ayt_tarih2
	

FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id 
    AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id 
    AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id 
    AND total_student_number.year = base_points.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id 
    AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id 
    AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id 
    AND total_student_number.year = general_infos.year
LEFT JOIN Combined_Correct_Answers ON departments.id = Combined_Correct_Answers.department_id
  And total_student_number.year = Combined_Correct_Answers.year

GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;

	select * from departments

select * from academicians
where proffesor = 0;

Select  faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    SUM(genders.male) AS male, 
    SUM(genders.female) AS female, 
    SUM(total_student_number.male) AS total_male_number, 
    SUM(total_student_number.female) AS total_female_number, 
    SUM(total_student_number.total_number) AS total_student_number,
    AVG(academicians.proffesor) AS avg_professors, 
    AVG(academicians.assoc_prof) AS avg_assoc_prof, 
    AVG(academicians.phd) AS avg_phd, 
    AVG(base_points.point) AS avg_base_point, 
	
	Combined_Correct_Answers.tyt_turkce,
	Combined_Correct_Answers.tyt_matematik,
	Combined_Correct_Answers.tyt_fen,
	Combined_Correct_Answers.tyt_sosyal,
	Combined_Correct_Answers.ayt_matematik,
	Combined_Correct_Answers.ayt_fizik,
	Combined_Correct_Answers.ayt_kimya,
	Combined_Correct_Answers.ayt_biyoloji,
	Combined_Correct_Answers.ayt_edebiyat,
	Combined_Correct_Answers.ayt_cografya1,
	Combined_Correct_Answers.ayt_cografya2,
	Combined_Correct_Answers.ayt_din,
	Combined_Correct_Answers.ayt_felsefe,
	Combined_Correct_Answers.ayt_tarih1,
	Combined_Correct_Answers.ayt_tarih2,
	
	SUM(CASE WHEN student_regions.region_number = 1 THEN student_regions.student_count ELSE 0 END) AS Marmara,
    SUM(CASE WHEN student_regions.region_number = 2 THEN student_regions.student_count ELSE 0 END) AS Ege,
    SUM(CASE WHEN student_regions.region_number = 3 THEN student_regions.student_count ELSE 0 END) AS Akdeniz,
    SUM(CASE WHEN student_regions.region_number = 4 THEN student_regions.student_count ELSE 0 END) AS Karadeniz,
    SUM(CASE WHEN student_regions.region_number = 5 THEN student_regions.student_count ELSE 0 END) AS Ic_Anadolu,
    SUM(CASE WHEN student_regions.region_number = 6 THEN student_regions.student_count ELSE 0 END) AS Dogu_Anadolu,
    SUM(CASE WHEN student_regions.region_number = 7 THEN student_regions.student_count ELSE 0 END) AS Guney_Dogu_Anadolu
	

FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id 
    AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id 
    AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id 
    AND total_student_number.year = base_points.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id 
    AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id 
    AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id 
    AND total_student_number.year = general_infos.year
LEFT JOIN Combined_Correct_Answers ON departments.id = Combined_Correct_Answers.department_id
  And total_student_number.year = Combined_Correct_Answers.year
LEFT JOIN student_regions  as sr ON departments.id = student_regionsdepartment_id
 AND total_student_number.year = student_regions.year

GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;</sql><sql name="SQL 3">SELECT 
    faculties.id AS faculty_id, 
    faculties.faculty_name AS faculty_name, 
    departments.id AS department_id, 
    departments.department_name, 
    departments.d_type AS department_type, 
    total_student_number.year AS year, 
    genders.male AS male, 
    genders.female AS female, 
    total_student_number.male AS total_male_number, 
    total_student_number.female AS total_female_number, 
    total_student_number.total_number AS total_student_number_,
    academicians.proffesor AS professors, 
    academicians.assoc_prof AS assoc_prof, 
    academicians.phd AS phd, 
    base_points.point AS base_point,
    Combined_Correct_Answers.tyt_turkce,
    Combined_Correct_Answers.tyt_matematik,
    Combined_Correct_Answers.tyt_fen,
    Combined_Correct_Answers.tyt_sosyal,
    Combined_Correct_Answers.ayt_matematik,
    Combined_Correct_Answers.ayt_fizik,
    Combined_Correct_Answers.ayt_kimya,
    Combined_Correct_Answers.ayt_biyoloji,
    Combined_Correct_Answers.ayt_edebiyat,
    Combined_Correct_Answers.ayt_cografya1,
    Combined_Correct_Answers.ayt_cografya2,
    Combined_Correct_Answers.ayt_din,
    Combined_Correct_Answers.ayt_felsefe,
    Combined_Correct_Answers.ayt_tarih1,
    Combined_Correct_Answers.ayt_tarih2,
    COALESCE(SUM(CASE WHEN student_regions.region = 1 THEN student_regions.student_number ELSE 0 END), 0) AS Marmara,
    COALESCE(SUM(CASE WHEN student_regions.region = 2 THEN student_regions.student_number ELSE 0 END), 0) AS Ege,
    COALESCE(SUM(CASE WHEN student_regions.region = 3 THEN student_regions.student_number ELSE 0 END), 0) AS Akdeniz,
    COALESCE(SUM(CASE WHEN student_regions.region = 4 THEN student_regions.student_number ELSE 0 END), 0) AS Karadeniz,
    COALESCE(SUM(CASE WHEN student_regions.region = 5 THEN student_regions.student_number ELSE 0 END), 0) AS Ic_Anadolu,
    COALESCE(SUM(CASE WHEN student_regions.region = 6 THEN student_regions.student_number ELSE 0 END), 0) AS Dogu_Anadolu,
    COALESCE(SUM(CASE WHEN student_regions.region = 7 THEN student_regions.student_number ELSE 0 END), 0) AS Guney_Dogu_Anadolu
FROM departments
LEFT JOIN faculties ON departments.faculty_id = faculties.id
LEFT JOIN genders ON departments.id = genders.department_id
LEFT JOIN total_student_number ON departments.id = total_student_number.department_id 
    AND genders.year = total_student_number.year
LEFT JOIN academicians ON departments.id = academicians.department_id 
    AND total_student_number.year = academicians.year
LEFT JOIN base_points ON departments.id = base_points.department_id 
    AND total_student_number.year = base_points.year
LEFT JOIN exchange_program ON departments.id = exchange_program.department_id 
    AND total_student_number.year = exchange_program.year
LEFT JOIN success_orders ON departments.id = success_orders.department_id 
    AND total_student_number.year = success_orders.year
LEFT JOIN general_infos ON departments.id = general_infos.department_id 
    AND total_student_number.year = general_infos.year
LEFT JOIN Combined_Correct_Answers ON departments.id = Combined_Correct_Answers.department_id
  AND total_student_number.year = Combined_Correct_Answers.year
LEFT JOIN student_regions ON departments.id = student_regions.department_id
 AND total_student_number.year = student_regions.year
GROUP BY 
    faculties.id, 
    faculties.faculty_name, 
    departments.id, 
    departments.department_name, 
    departments.d_type, 
    total_student_number.year;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
